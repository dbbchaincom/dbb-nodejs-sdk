version: 2
jobs:
  build:
    working_directory: ~/pillarwallet-nodejs-sdk
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      - run:
            name: Authenticate with registry
            command: curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD https://pillarproject.jfrog.io/pillarproject/api/npm/auth >> ~/pillarwallet-nodejs-sdk/.npmrc
      - run:
            name: Set Registry
            command: npm config set registry https://pillarproject.jfrog.io/pillarproject/api/npm/npm/
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install Packages
          command: npm i
      - run:
          name: Install TypeScript packages globally
          command: sudo npm i -g typescript tsc ts-node
      - run:
          name: Compile TypeScript
          command: npm run compile
      - run:
          name: Webpack bundle SDK for Production
          command: npm run build-production
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

  whitesource:
    working_directory: ~/pillarwallet-nodejs-sdk
    docker:
      - image: circleci/openjdk:8-node-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/pillarwallet-nodejs-sdk/workspace
      - run :
          name: Setup WhiteSource
          command: curl -LJO https://github.com/whitesource/fs-agent-distribution/raw/master/standAlone/wss_agent.sh
      - run:
          name: execute whitesource
          command: |
            cd .whitesource/
            chmod +x wss_agent.sh && ./wss_agent.sh -apiKey $WHITESOURCE_API_KEY -c ./whitesource-fs-agent.config  -project pillarwallet-nodejs-sdk -f files.list

  test:
    working_directory: ~/pillarwallet-nodejs-sdk
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD https://pillarproject.jfrog.io/pillarproject/api/npm/auth >> ~/pillarwallet-nodejs-sdk/.npmrc
      - run:
          name: Set Registry
          command: npm config set registry https://pillarproject.jfrog.io/pillarproject/api/npm/npm/
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install Packages
          command: npm i
      - run:
          name: Test
          command: npm run test:unit
  publish:
    working_directory: ~/pillarwallet-nodejs-sdk
    docker:
      - image: circleci/node:8.9.4
    steps:
      - checkout
      - run:
          name: Append circleCI build number to version
          command: |
            git config user.email "devops@pillar.io"
            git config user.name "Issabot"
            npm version $(node -e "const currentVersion=require('./package.json').version; const firstTwoDots=currentVersion.substring(0, currentVersion.lastIndexOf('.')+1); console.log(firstTwoDots);")$CIRCLE_BUILD_NUM

      - run:
            name: Authenticate with registry
            command: curl -u $ARTIFACTORY_PUBLISHING_USER:$ARTIFACTORY_PUBLISHING_PASSWORD https://pillarproject.jfrog.io/pillarproject/api/npm/auth >> ~/pillarwallet-nodejs-sdk/.npmrc
      - run:
          name: Set Registry
          command: npm config set registry https://pillarproject.jfrog.io/pillarproject/api/npm/npm/
      - run:
          name: Install Packages
          command: npm i
      - run:
          name: Install TypeScript packages globally
          command: sudo npm i -g typescript tsc ts-node
      - run:
          name: Compile TypeScript
          command: npm run compile
      - run:
          name: Webpack bundle SDK for Production
          command: npm run build-production
      - run:
          name: Publish Package to Artifactory
          command: npm publish   --registry https://pillarproject.jfrog.io/pillarproject/api/npm/npm/
      - run:
          name: Announce Publish
          command: |
            chmod +x .circleci/announcePublish.sh
            .circleci/announcePublish.sh "Platform Core SDK" "$(node -e "console.log(require('./package.json').name)")@$(node -e "console.log(require('./package.json').version)")"

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - whitesource:
          requires:
            - test
      - publish:
          requires:
            - test
          filters:
            branches:
              only:
                - master
